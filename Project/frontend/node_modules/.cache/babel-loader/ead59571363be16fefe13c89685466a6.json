{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\n\nfunction useTreeWalker(_ref) {\n  var container = _ref.container,\n      accept = _ref.accept,\n      walk = _ref.walk,\n      _ref$enabled = _ref.enabled,\n      enabled = _ref$enabled === void 0 ? true : _ref$enabled;\n  var acceptRef = useRef(accept);\n  var walkRef = useRef(walk);\n  useEffect(function () {\n    acceptRef.current = accept;\n    walkRef.current = walk;\n  }, [accept, walk]);\n  useIsoMorphicEffect(function () {\n    if (!container) return;\n    if (!enabled) return;\n    var accept = acceptRef.current;\n    var walk = walkRef.current;\n    var acceptNode = Object.assign(function (node) {\n      return accept(node);\n    }, {\n      acceptNode: accept\n    });\n    var walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, acceptNode, false);\n\n    while (walker.nextNode()) {\n      walk(walker.currentNode);\n    }\n  }, [container, enabled, acceptRef, walkRef]);\n}\n\nexport { useTreeWalker };","map":{"version":3,"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,mBAAT,QAAoC,iCAApC;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,MAAM,GAAGF,IAAI,CAACE,MADlB;AAAA,MAEIC,IAAI,GAAGH,IAAI,CAACG,IAFhB;AAAA,MAGIC,YAAY,GAAGJ,IAAI,CAACK,OAHxB;AAAA,MAIIA,OAAO,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0B,IAA1B,GAAiCA,YAJ/C;AAKA,MAAIE,SAAS,GAAGV,MAAM,CAACM,MAAD,CAAtB;AACA,MAAIK,OAAO,GAAGX,MAAM,CAACO,IAAD,CAApB;AACAN,WAAS,CAAC,YAAY;AACpBS,aAAS,CAACE,OAAV,GAAoBN,MAApB;AACAK,WAAO,CAACC,OAAR,GAAkBL,IAAlB;AACD,GAHQ,EAGN,CAACD,MAAD,EAASC,IAAT,CAHM,CAAT;AAIAL,qBAAmB,CAAC,YAAY;AAC9B,QAAI,CAACG,SAAL,EAAgB;AAChB,QAAI,CAACI,OAAL,EAAc;AACd,QAAIH,MAAM,GAAGI,SAAS,CAACE,OAAvB;AACA,QAAIL,IAAI,GAAGI,OAAO,CAACC,OAAnB;AACA,QAAIC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,UAAUC,IAAV,EAAgB;AAC7C,aAAOV,MAAM,CAACU,IAAD,CAAb;AACD,KAFgB,EAEd;AACDH,gBAAU,EAAEP;AADX,KAFc,CAAjB;AAKA,QAAIW,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA0Bd,SAA1B,EAAqCe,UAAU,CAACC,YAAhD,EAA8DR,UAA9D,EAA0E,KAA1E,CAAb;;AAEA,WAAOI,MAAM,CAACK,QAAP,EAAP,EAA0B;AACxBf,UAAI,CAACU,MAAM,CAACM,WAAR,CAAJ;AACD;AACF,GAfkB,EAehB,CAAClB,SAAD,EAAYI,OAAZ,EAAqBC,SAArB,EAAgCC,OAAhC,CAfgB,CAAnB;AAgBD;;AAED,SAASR,aAAT","names":["useRef","useEffect","useIsoMorphicEffect","useTreeWalker","_ref","container","accept","walk","_ref$enabled","enabled","acceptRef","walkRef","current","acceptNode","Object","assign","node","walker","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode"],"sources":["C:/Users/Joka24/Desktop/diplom/node_modules/@headlessui/react/dist/hooks/use-tree-walker.esm.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\n\nfunction useTreeWalker(_ref) {\n  var container = _ref.container,\n      accept = _ref.accept,\n      walk = _ref.walk,\n      _ref$enabled = _ref.enabled,\n      enabled = _ref$enabled === void 0 ? true : _ref$enabled;\n  var acceptRef = useRef(accept);\n  var walkRef = useRef(walk);\n  useEffect(function () {\n    acceptRef.current = accept;\n    walkRef.current = walk;\n  }, [accept, walk]);\n  useIsoMorphicEffect(function () {\n    if (!container) return;\n    if (!enabled) return;\n    var accept = acceptRef.current;\n    var walk = walkRef.current;\n    var acceptNode = Object.assign(function (node) {\n      return accept(node);\n    }, {\n      acceptNode: accept\n    });\n    var walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, acceptNode, false);\n\n    while (walker.nextNode()) {\n      walk(walker.currentNode);\n    }\n  }, [container, enabled, acceptRef, walkRef]);\n}\n\nexport { useTreeWalker };\n"]},"metadata":{},"sourceType":"module"}