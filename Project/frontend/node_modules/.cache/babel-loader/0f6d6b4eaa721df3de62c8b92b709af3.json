{"ast":null,"code":"import React, { createContext, useContext, useCallback } from 'react';\nimport { useIsoMorphicEffect } from '../hooks/use-iso-morphic-effect.esm.js';\nvar StackContext = /*#__PURE__*/createContext(function () {});\nStackContext.displayName = 'StackContext';\nvar StackMessage;\n\n(function (StackMessage) {\n  StackMessage[StackMessage[\"Add\"] = 0] = \"Add\";\n  StackMessage[StackMessage[\"Remove\"] = 1] = \"Remove\";\n})(StackMessage || (StackMessage = {}));\n\nfunction useStackContext() {\n  return useContext(StackContext);\n}\n\nfunction StackProvider(_ref) {\n  var children = _ref.children,\n      onUpdate = _ref.onUpdate,\n      type = _ref.type,\n      element = _ref.element;\n  var parentUpdate = useStackContext();\n  var notify = useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    } // Notify our layer\n\n\n    onUpdate == null ? void 0 : onUpdate.apply(void 0, args); // Notify the parent\n\n    parentUpdate.apply(void 0, args);\n  }, [parentUpdate, onUpdate]);\n  useIsoMorphicEffect(function () {\n    notify(StackMessage.Add, type, element);\n    return function () {\n      return notify(StackMessage.Remove, type, element);\n    };\n  }, [notify, type, element]);\n  return React.createElement(StackContext.Provider, {\n    value: notify\n  }, children);\n}\n\nexport { StackMessage, StackProvider, useStackContext };","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,wCAApC;AAEA,IAAIC,YAAY,GAAG,aAAaJ,aAAa,CAAC,YAAY,CAAE,CAAf,CAA7C;AACAI,YAAY,CAACC,WAAb,GAA2B,cAA3B;AACA,IAAIC,YAAJ;;AAEA,CAAC,UAAUA,YAAV,EAAwB;AACvBA,cAAY,CAACA,YAAY,CAAC,KAAD,CAAZ,GAAsB,CAAvB,CAAZ,GAAwC,KAAxC;AACAA,cAAY,CAACA,YAAY,CAAC,QAAD,CAAZ,GAAyB,CAA1B,CAAZ,GAA2C,QAA3C;AACD,CAHD,EAGGA,YAAY,KAAKA,YAAY,GAAG,EAApB,CAHf;;AAKA,SAASC,eAAT,GAA2B;AACzB,SAAON,UAAU,CAACG,YAAD,CAAjB;AACD;;AACD,SAASI,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAAA,MAEIC,IAAI,GAAGH,IAAI,CAACG,IAFhB;AAAA,MAGIC,OAAO,GAAGJ,IAAI,CAACI,OAHnB;AAIA,MAAIC,YAAY,GAAGP,eAAe,EAAlC;AACA,MAAIQ,MAAM,GAAGb,WAAW,CAAC,YAAY;AACnC,SAAK,IAAIc,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;AACvFF,UAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD,KAHkC,CAKnC;;;AACAV,YAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAACW,KAAT,CAAe,KAAK,CAApB,EAAuBH,IAAvB,CAA5B,CANmC,CAMuB;;AAE1DL,gBAAY,CAACQ,KAAb,CAAmB,KAAK,CAAxB,EAA2BH,IAA3B;AACD,GATuB,EASrB,CAACL,YAAD,EAAeH,QAAf,CATqB,CAAxB;AAUAR,qBAAmB,CAAC,YAAY;AAC9BY,UAAM,CAACT,YAAY,CAACiB,GAAd,EAAmBX,IAAnB,EAAyBC,OAAzB,CAAN;AACA,WAAO,YAAY;AACjB,aAAOE,MAAM,CAACT,YAAY,CAACkB,MAAd,EAAsBZ,IAAtB,EAA4BC,OAA5B,CAAb;AACD,KAFD;AAGD,GALkB,EAKhB,CAACE,MAAD,EAASH,IAAT,EAAeC,OAAf,CALgB,CAAnB;AAMA,SAAOd,KAAK,CAAC0B,aAAN,CAAoBrB,YAAY,CAACsB,QAAjC,EAA2C;AAChDC,SAAK,EAAEZ;AADyC,GAA3C,EAEJL,QAFI,CAAP;AAGD;;AAED,SAASJ,YAAT,EAAuBE,aAAvB,EAAsCD,eAAtC","names":["React","createContext","useContext","useCallback","useIsoMorphicEffect","StackContext","displayName","StackMessage","useStackContext","StackProvider","_ref","children","onUpdate","type","element","parentUpdate","notify","_len","arguments","length","args","Array","_key","apply","Add","Remove","createElement","Provider","value"],"sources":["C:/Users/Joka24/Desktop/diplom/node_modules/@headlessui/react/dist/internal/stack-context.esm.js"],"sourcesContent":["import React, { createContext, useContext, useCallback } from 'react';\nimport { useIsoMorphicEffect } from '../hooks/use-iso-morphic-effect.esm.js';\n\nvar StackContext = /*#__PURE__*/createContext(function () {});\nStackContext.displayName = 'StackContext';\nvar StackMessage;\n\n(function (StackMessage) {\n  StackMessage[StackMessage[\"Add\"] = 0] = \"Add\";\n  StackMessage[StackMessage[\"Remove\"] = 1] = \"Remove\";\n})(StackMessage || (StackMessage = {}));\n\nfunction useStackContext() {\n  return useContext(StackContext);\n}\nfunction StackProvider(_ref) {\n  var children = _ref.children,\n      onUpdate = _ref.onUpdate,\n      type = _ref.type,\n      element = _ref.element;\n  var parentUpdate = useStackContext();\n  var notify = useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // Notify our layer\n    onUpdate == null ? void 0 : onUpdate.apply(void 0, args); // Notify the parent\n\n    parentUpdate.apply(void 0, args);\n  }, [parentUpdate, onUpdate]);\n  useIsoMorphicEffect(function () {\n    notify(StackMessage.Add, type, element);\n    return function () {\n      return notify(StackMessage.Remove, type, element);\n    };\n  }, [notify, type, element]);\n  return React.createElement(StackContext.Provider, {\n    value: notify\n  }, children);\n}\n\nexport { StackMessage, StackProvider, useStackContext };\n"]},"metadata":{},"sourceType":"module"}