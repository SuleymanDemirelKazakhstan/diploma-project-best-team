{"ast":null,"code":"import { extends as _extends, objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useReducer, useEffect, useCallback, useMemo, createContext, useRef, useContext, Fragment } from 'react';\nimport { match } from '../../utils/match.esm.js';\nimport { render, forwardRefWithAs, Features } from '../../utils/render.esm.js';\nimport { useSyncRefs } from '../../hooks/use-sync-refs.esm.js';\nimport { Keys } from '../keyboard.esm.js';\nimport { isDisabledReactIssue7711 } from '../../utils/bugs.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed.esm.js';\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type.esm.js';\n\nvar _reducers;\n\nvar DisclosureStates;\n\n(function (DisclosureStates) {\n  DisclosureStates[DisclosureStates[\"Open\"] = 0] = \"Open\";\n  DisclosureStates[DisclosureStates[\"Closed\"] = 1] = \"Closed\";\n})(DisclosureStates || (DisclosureStates = {}));\n\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"ToggleDisclosure\"] = 0] = \"ToggleDisclosure\";\n  ActionTypes[ActionTypes[\"CloseDisclosure\"] = 1] = \"CloseDisclosure\";\n  ActionTypes[ActionTypes[\"SetButtonId\"] = 2] = \"SetButtonId\";\n  ActionTypes[ActionTypes[\"SetPanelId\"] = 3] = \"SetPanelId\";\n  ActionTypes[ActionTypes[\"LinkPanel\"] = 4] = \"LinkPanel\";\n  ActionTypes[ActionTypes[\"UnlinkPanel\"] = 5] = \"UnlinkPanel\";\n})(ActionTypes || (ActionTypes = {}));\n\nvar reducers = (_reducers = {}, _reducers[ActionTypes.ToggleDisclosure] = function (state) {\n  var _match;\n\n  return _extends({}, state, {\n    disclosureState: match(state.disclosureState, (_match = {}, _match[DisclosureStates.Open] = DisclosureStates.Closed, _match[DisclosureStates.Closed] = DisclosureStates.Open, _match))\n  });\n}, _reducers[ActionTypes.CloseDisclosure] = function (state) {\n  if (state.disclosureState === DisclosureStates.Closed) return state;\n  return _extends({}, state, {\n    disclosureState: DisclosureStates.Closed\n  });\n}, _reducers[ActionTypes.LinkPanel] = function (state) {\n  if (state.linkedPanel === true) return state;\n  return _extends({}, state, {\n    linkedPanel: true\n  });\n}, _reducers[ActionTypes.UnlinkPanel] = function (state) {\n  if (state.linkedPanel === false) return state;\n  return _extends({}, state, {\n    linkedPanel: false\n  });\n}, _reducers[ActionTypes.SetButtonId] = function (state, action) {\n  if (state.buttonId === action.buttonId) return state;\n  return _extends({}, state, {\n    buttonId: action.buttonId\n  });\n}, _reducers[ActionTypes.SetPanelId] = function (state, action) {\n  if (state.panelId === action.panelId) return state;\n  return _extends({}, state, {\n    panelId: action.panelId\n  });\n}, _reducers);\nvar DisclosureContext = /*#__PURE__*/createContext(null);\nDisclosureContext.displayName = 'DisclosureContext';\n\nfunction useDisclosureContext(component) {\n  var context = useContext(DisclosureContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + Disclosure.name + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext);\n    throw err;\n  }\n\n  return context;\n}\n\nvar DisclosureAPIContext = /*#__PURE__*/createContext(null);\nDisclosureAPIContext.displayName = 'DisclosureAPIContext';\n\nfunction useDisclosureAPIContext(component) {\n  var context = useContext(DisclosureAPIContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + Disclosure.name + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureAPIContext);\n    throw err;\n  }\n\n  return context;\n}\n\nvar DisclosurePanelContext = /*#__PURE__*/createContext(null);\nDisclosurePanelContext.displayName = 'DisclosurePanelContext';\n\nfunction useDisclosurePanelContext() {\n  return useContext(DisclosurePanelContext);\n}\n\nfunction stateReducer(state, action) {\n  return match(action.type, reducers, state, action);\n} // ---\n\n\nvar DEFAULT_DISCLOSURE_TAG = Fragment;\n\nfunction Disclosure(props) {\n  var _match2;\n\n  var _props$defaultOpen = props.defaultOpen,\n      defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"defaultOpen\"]);\n\n  var buttonId = \"headlessui-disclosure-button-\" + useId();\n  var panelId = \"headlessui-disclosure-panel-\" + useId();\n  var reducerBag = useReducer(stateReducer, {\n    disclosureState: defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed,\n    linkedPanel: false,\n    buttonId: buttonId,\n    panelId: panelId\n  });\n  var disclosureState = reducerBag[0].disclosureState,\n      dispatch = reducerBag[1];\n  useEffect(function () {\n    return dispatch({\n      type: ActionTypes.SetButtonId,\n      buttonId: buttonId\n    });\n  }, [buttonId, dispatch]);\n  useEffect(function () {\n    return dispatch({\n      type: ActionTypes.SetPanelId,\n      panelId: panelId\n    });\n  }, [panelId, dispatch]);\n  var close = useCallback(function (focusableElement) {\n    dispatch({\n      type: ActionTypes.CloseDisclosure\n    });\n\n    var restoreElement = function () {\n      if (!focusableElement) return document.getElementById(buttonId);\n      if (focusableElement instanceof HTMLElement) return focusableElement;\n      if (focusableElement.current instanceof HTMLElement) return focusableElement.current;\n      return document.getElementById(buttonId);\n    }();\n\n    restoreElement == null ? void 0 : restoreElement.focus();\n  }, [dispatch, buttonId]);\n  var api = useMemo(function () {\n    return {\n      close: close\n    };\n  }, [close]);\n  var slot = useMemo(function () {\n    return {\n      open: disclosureState === DisclosureStates.Open,\n      close: close\n    };\n  }, [disclosureState, close]);\n  return React.createElement(DisclosureContext.Provider, {\n    value: reducerBag\n  }, React.createElement(DisclosureAPIContext.Provider, {\n    value: api\n  }, React.createElement(OpenClosedProvider, {\n    value: match(disclosureState, (_match2 = {}, _match2[DisclosureStates.Open] = State.Open, _match2[DisclosureStates.Closed] = State.Closed, _match2))\n  }, render({\n    props: passthroughProps,\n    slot: slot,\n    defaultTag: DEFAULT_DISCLOSURE_TAG,\n    name: 'Disclosure'\n  }))));\n} // ---\n\n\nvar DEFAULT_BUTTON_TAG = 'button';\nvar Button = /*#__PURE__*/forwardRefWithAs(function Button(props, ref) {\n  var _useDisclosureContext = useDisclosureContext([Disclosure.name, Button.name].join('.')),\n      state = _useDisclosureContext[0],\n      dispatch = _useDisclosureContext[1];\n\n  var internalButtonRef = useRef(null);\n  var buttonRef = useSyncRefs(internalButtonRef, ref);\n  var panelContext = useDisclosurePanelContext();\n  var isWithinPanel = panelContext === null ? false : panelContext === state.panelId;\n  var handleKeyDown = useCallback(function (event) {\n    var _document$getElementB;\n\n    if (isWithinPanel) {\n      if (state.disclosureState === DisclosureStates.Closed) return;\n\n      switch (event.key) {\n        case Keys.Space:\n        case Keys.Enter:\n          event.preventDefault();\n          event.stopPropagation();\n          dispatch({\n            type: ActionTypes.ToggleDisclosure\n          });\n          (_document$getElementB = document.getElementById(state.buttonId)) == null ? void 0 : _document$getElementB.focus();\n          break;\n      }\n    } else {\n      switch (event.key) {\n        case Keys.Space:\n        case Keys.Enter:\n          event.preventDefault();\n          event.stopPropagation();\n          dispatch({\n            type: ActionTypes.ToggleDisclosure\n          });\n          break;\n      }\n    }\n  }, [dispatch, isWithinPanel, state.disclosureState]);\n  var handleKeyUp = useCallback(function (event) {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault();\n        break;\n    }\n  }, []);\n  var handleClick = useCallback(function (event) {\n    if (isDisabledReactIssue7711(event.currentTarget)) return;\n    if (props.disabled) return;\n\n    if (isWithinPanel) {\n      var _document$getElementB2;\n\n      dispatch({\n        type: ActionTypes.ToggleDisclosure\n      });\n      (_document$getElementB2 = document.getElementById(state.buttonId)) == null ? void 0 : _document$getElementB2.focus();\n    } else {\n      dispatch({\n        type: ActionTypes.ToggleDisclosure\n      });\n    }\n  }, [dispatch, props.disabled, state.buttonId, isWithinPanel]);\n  var slot = useMemo(function () {\n    return {\n      open: state.disclosureState === DisclosureStates.Open\n    };\n  }, [state]);\n  var type = useResolveButtonType(props, internalButtonRef);\n  var passthroughProps = props;\n  var propsWeControl = isWithinPanel ? {\n    ref: buttonRef,\n    type: type,\n    onKeyDown: handleKeyDown,\n    onClick: handleClick\n  } : {\n    ref: buttonRef,\n    id: state.buttonId,\n    type: type,\n    'aria-expanded': props.disabled ? undefined : state.disclosureState === DisclosureStates.Open,\n    'aria-controls': state.linkedPanel ? state.panelId : undefined,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Disclosure.Button'\n  });\n}); // ---\n\nvar DEFAULT_PANEL_TAG = 'div';\nvar PanelRenderFeatures = Features.RenderStrategy | Features.Static;\nvar Panel = /*#__PURE__*/forwardRefWithAs(function Panel(props, ref) {\n  var _useDisclosureContext2 = useDisclosureContext([Disclosure.name, Panel.name].join('.')),\n      state = _useDisclosureContext2[0],\n      dispatch = _useDisclosureContext2[1];\n\n  var _useDisclosureAPICont = useDisclosureAPIContext([Disclosure.name, Panel.name].join('.')),\n      close = _useDisclosureAPICont.close;\n\n  var panelRef = useSyncRefs(ref, function () {\n    if (state.linkedPanel) return;\n    dispatch({\n      type: ActionTypes.LinkPanel\n    });\n  });\n  var usesOpenClosedState = useOpenClosed();\n\n  var visible = function () {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open;\n    }\n\n    return state.disclosureState === DisclosureStates.Open;\n  }(); // Unlink on \"unmount\" myself\n\n\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: ActionTypes.UnlinkPanel\n      });\n    };\n  }, [dispatch]); // Unlink on \"unmount\" children\n\n  useEffect(function () {\n    var _props$unmount;\n\n    if (state.disclosureState === DisclosureStates.Closed && ((_props$unmount = props.unmount) != null ? _props$unmount : true)) {\n      dispatch({\n        type: ActionTypes.UnlinkPanel\n      });\n    }\n  }, [state.disclosureState, props.unmount, dispatch]);\n  var slot = useMemo(function () {\n    return {\n      open: state.disclosureState === DisclosureStates.Open,\n      close: close\n    };\n  }, [state, close]);\n  var propsWeControl = {\n    ref: panelRef,\n    id: state.panelId\n  };\n  var passthroughProps = props;\n  return React.createElement(DisclosurePanelContext.Provider, {\n    value: state.panelId\n  }, render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_PANEL_TAG,\n    features: PanelRenderFeatures,\n    visible: visible,\n    name: 'Disclosure.Panel'\n  }));\n}); // ---\n\nDisclosure.Button = Button;\nDisclosure.Panel = Panel;\nexport { Disclosure };","map":{"version":3,"mappings":"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","names":["extends","_extends","objectWithoutPropertiesLoose","_objectWithoutPropertiesLoose","React","useReducer","useEffect","useCallback","useMemo","createContext","useRef","useContext","Fragment","match","render","forwardRefWithAs","Features","useSyncRefs","Keys","isDisabledReactIssue7711","useId","OpenClosedProvider","State","useOpenClosed","useResolveButtonType","_reducers","DisclosureStates","ActionTypes","reducers","ToggleDisclosure","state","_match","disclosureState","Open","Closed","CloseDisclosure","LinkPanel","linkedPanel","UnlinkPanel","SetButtonId","action","buttonId","SetPanelId","panelId","DisclosureContext","displayName","useDisclosureContext","component","context","err","Error","Disclosure","name","captureStackTrace","DisclosureAPIContext","useDisclosureAPIContext","DisclosurePanelContext","useDisclosurePanelContext","stateReducer","type","DEFAULT_DISCLOSURE_TAG","props","_match2","_props$defaultOpen","defaultOpen","passthroughProps","reducerBag","dispatch","close","focusableElement","restoreElement","document","getElementById","HTMLElement","current","focus","api","slot","open","createElement","Provider","value","defaultTag","DEFAULT_BUTTON_TAG","Button","ref","_useDisclosureContext","join","internalButtonRef","buttonRef","panelContext","isWithinPanel","handleKeyDown","event","_document$getElementB","key","Space","Enter","preventDefault","stopPropagation","handleKeyUp","handleClick","currentTarget","disabled","_document$getElementB2","propsWeControl","onKeyDown","onClick","id","undefined","onKeyUp","DEFAULT_PANEL_TAG","PanelRenderFeatures","RenderStrategy","Static","Panel","_useDisclosureContext2","_useDisclosureAPICont","panelRef","usesOpenClosedState","visible","_props$unmount","unmount","features"],"sources":["C:/Users/Joka24/Desktop/diplom/node_modules/@headlessui/react/dist/components/disclosure/disclosure.esm.js"],"sourcesContent":["import { extends as _extends, objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useReducer, useEffect, useCallback, useMemo, createContext, useRef, useContext, Fragment } from 'react';\nimport { match } from '../../utils/match.esm.js';\nimport { render, forwardRefWithAs, Features } from '../../utils/render.esm.js';\nimport { useSyncRefs } from '../../hooks/use-sync-refs.esm.js';\nimport { Keys } from '../keyboard.esm.js';\nimport { isDisabledReactIssue7711 } from '../../utils/bugs.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed.esm.js';\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type.esm.js';\n\nvar _reducers;\nvar DisclosureStates;\n\n(function (DisclosureStates) {\n  DisclosureStates[DisclosureStates[\"Open\"] = 0] = \"Open\";\n  DisclosureStates[DisclosureStates[\"Closed\"] = 1] = \"Closed\";\n})(DisclosureStates || (DisclosureStates = {}));\n\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"ToggleDisclosure\"] = 0] = \"ToggleDisclosure\";\n  ActionTypes[ActionTypes[\"CloseDisclosure\"] = 1] = \"CloseDisclosure\";\n  ActionTypes[ActionTypes[\"SetButtonId\"] = 2] = \"SetButtonId\";\n  ActionTypes[ActionTypes[\"SetPanelId\"] = 3] = \"SetPanelId\";\n  ActionTypes[ActionTypes[\"LinkPanel\"] = 4] = \"LinkPanel\";\n  ActionTypes[ActionTypes[\"UnlinkPanel\"] = 5] = \"UnlinkPanel\";\n})(ActionTypes || (ActionTypes = {}));\n\nvar reducers = (_reducers = {}, _reducers[ActionTypes.ToggleDisclosure] = function (state) {\n  var _match;\n\n  return _extends({}, state, {\n    disclosureState: match(state.disclosureState, (_match = {}, _match[DisclosureStates.Open] = DisclosureStates.Closed, _match[DisclosureStates.Closed] = DisclosureStates.Open, _match))\n  });\n}, _reducers[ActionTypes.CloseDisclosure] = function (state) {\n  if (state.disclosureState === DisclosureStates.Closed) return state;\n  return _extends({}, state, {\n    disclosureState: DisclosureStates.Closed\n  });\n}, _reducers[ActionTypes.LinkPanel] = function (state) {\n  if (state.linkedPanel === true) return state;\n  return _extends({}, state, {\n    linkedPanel: true\n  });\n}, _reducers[ActionTypes.UnlinkPanel] = function (state) {\n  if (state.linkedPanel === false) return state;\n  return _extends({}, state, {\n    linkedPanel: false\n  });\n}, _reducers[ActionTypes.SetButtonId] = function (state, action) {\n  if (state.buttonId === action.buttonId) return state;\n  return _extends({}, state, {\n    buttonId: action.buttonId\n  });\n}, _reducers[ActionTypes.SetPanelId] = function (state, action) {\n  if (state.panelId === action.panelId) return state;\n  return _extends({}, state, {\n    panelId: action.panelId\n  });\n}, _reducers);\nvar DisclosureContext = /*#__PURE__*/createContext(null);\nDisclosureContext.displayName = 'DisclosureContext';\n\nfunction useDisclosureContext(component) {\n  var context = useContext(DisclosureContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + Disclosure.name + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext);\n    throw err;\n  }\n\n  return context;\n}\n\nvar DisclosureAPIContext = /*#__PURE__*/createContext(null);\nDisclosureAPIContext.displayName = 'DisclosureAPIContext';\n\nfunction useDisclosureAPIContext(component) {\n  var context = useContext(DisclosureAPIContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + Disclosure.name + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureAPIContext);\n    throw err;\n  }\n\n  return context;\n}\n\nvar DisclosurePanelContext = /*#__PURE__*/createContext(null);\nDisclosurePanelContext.displayName = 'DisclosurePanelContext';\n\nfunction useDisclosurePanelContext() {\n  return useContext(DisclosurePanelContext);\n}\n\nfunction stateReducer(state, action) {\n  return match(action.type, reducers, state, action);\n} // ---\n\n\nvar DEFAULT_DISCLOSURE_TAG = Fragment;\nfunction Disclosure(props) {\n  var _match2;\n\n  var _props$defaultOpen = props.defaultOpen,\n      defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"defaultOpen\"]);\n\n  var buttonId = \"headlessui-disclosure-button-\" + useId();\n  var panelId = \"headlessui-disclosure-panel-\" + useId();\n  var reducerBag = useReducer(stateReducer, {\n    disclosureState: defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed,\n    linkedPanel: false,\n    buttonId: buttonId,\n    panelId: panelId\n  });\n  var disclosureState = reducerBag[0].disclosureState,\n      dispatch = reducerBag[1];\n  useEffect(function () {\n    return dispatch({\n      type: ActionTypes.SetButtonId,\n      buttonId: buttonId\n    });\n  }, [buttonId, dispatch]);\n  useEffect(function () {\n    return dispatch({\n      type: ActionTypes.SetPanelId,\n      panelId: panelId\n    });\n  }, [panelId, dispatch]);\n  var close = useCallback(function (focusableElement) {\n    dispatch({\n      type: ActionTypes.CloseDisclosure\n    });\n\n    var restoreElement = function () {\n      if (!focusableElement) return document.getElementById(buttonId);\n      if (focusableElement instanceof HTMLElement) return focusableElement;\n      if (focusableElement.current instanceof HTMLElement) return focusableElement.current;\n      return document.getElementById(buttonId);\n    }();\n\n    restoreElement == null ? void 0 : restoreElement.focus();\n  }, [dispatch, buttonId]);\n  var api = useMemo(function () {\n    return {\n      close: close\n    };\n  }, [close]);\n  var slot = useMemo(function () {\n    return {\n      open: disclosureState === DisclosureStates.Open,\n      close: close\n    };\n  }, [disclosureState, close]);\n  return React.createElement(DisclosureContext.Provider, {\n    value: reducerBag\n  }, React.createElement(DisclosureAPIContext.Provider, {\n    value: api\n  }, React.createElement(OpenClosedProvider, {\n    value: match(disclosureState, (_match2 = {}, _match2[DisclosureStates.Open] = State.Open, _match2[DisclosureStates.Closed] = State.Closed, _match2))\n  }, render({\n    props: passthroughProps,\n    slot: slot,\n    defaultTag: DEFAULT_DISCLOSURE_TAG,\n    name: 'Disclosure'\n  }))));\n} // ---\n\nvar DEFAULT_BUTTON_TAG = 'button';\nvar Button = /*#__PURE__*/forwardRefWithAs(function Button(props, ref) {\n  var _useDisclosureContext = useDisclosureContext([Disclosure.name, Button.name].join('.')),\n      state = _useDisclosureContext[0],\n      dispatch = _useDisclosureContext[1];\n\n  var internalButtonRef = useRef(null);\n  var buttonRef = useSyncRefs(internalButtonRef, ref);\n  var panelContext = useDisclosurePanelContext();\n  var isWithinPanel = panelContext === null ? false : panelContext === state.panelId;\n  var handleKeyDown = useCallback(function (event) {\n    var _document$getElementB;\n\n    if (isWithinPanel) {\n      if (state.disclosureState === DisclosureStates.Closed) return;\n\n      switch (event.key) {\n        case Keys.Space:\n        case Keys.Enter:\n          event.preventDefault();\n          event.stopPropagation();\n          dispatch({\n            type: ActionTypes.ToggleDisclosure\n          });\n          (_document$getElementB = document.getElementById(state.buttonId)) == null ? void 0 : _document$getElementB.focus();\n          break;\n      }\n    } else {\n      switch (event.key) {\n        case Keys.Space:\n        case Keys.Enter:\n          event.preventDefault();\n          event.stopPropagation();\n          dispatch({\n            type: ActionTypes.ToggleDisclosure\n          });\n          break;\n      }\n    }\n  }, [dispatch, isWithinPanel, state.disclosureState]);\n  var handleKeyUp = useCallback(function (event) {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault();\n        break;\n    }\n  }, []);\n  var handleClick = useCallback(function (event) {\n    if (isDisabledReactIssue7711(event.currentTarget)) return;\n    if (props.disabled) return;\n\n    if (isWithinPanel) {\n      var _document$getElementB2;\n\n      dispatch({\n        type: ActionTypes.ToggleDisclosure\n      });\n      (_document$getElementB2 = document.getElementById(state.buttonId)) == null ? void 0 : _document$getElementB2.focus();\n    } else {\n      dispatch({\n        type: ActionTypes.ToggleDisclosure\n      });\n    }\n  }, [dispatch, props.disabled, state.buttonId, isWithinPanel]);\n  var slot = useMemo(function () {\n    return {\n      open: state.disclosureState === DisclosureStates.Open\n    };\n  }, [state]);\n  var type = useResolveButtonType(props, internalButtonRef);\n  var passthroughProps = props;\n  var propsWeControl = isWithinPanel ? {\n    ref: buttonRef,\n    type: type,\n    onKeyDown: handleKeyDown,\n    onClick: handleClick\n  } : {\n    ref: buttonRef,\n    id: state.buttonId,\n    type: type,\n    'aria-expanded': props.disabled ? undefined : state.disclosureState === DisclosureStates.Open,\n    'aria-controls': state.linkedPanel ? state.panelId : undefined,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Disclosure.Button'\n  });\n}); // ---\n\nvar DEFAULT_PANEL_TAG = 'div';\nvar PanelRenderFeatures = Features.RenderStrategy | Features.Static;\nvar Panel = /*#__PURE__*/forwardRefWithAs(function Panel(props, ref) {\n  var _useDisclosureContext2 = useDisclosureContext([Disclosure.name, Panel.name].join('.')),\n      state = _useDisclosureContext2[0],\n      dispatch = _useDisclosureContext2[1];\n\n  var _useDisclosureAPICont = useDisclosureAPIContext([Disclosure.name, Panel.name].join('.')),\n      close = _useDisclosureAPICont.close;\n\n  var panelRef = useSyncRefs(ref, function () {\n    if (state.linkedPanel) return;\n    dispatch({\n      type: ActionTypes.LinkPanel\n    });\n  });\n  var usesOpenClosedState = useOpenClosed();\n\n  var visible = function () {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open;\n    }\n\n    return state.disclosureState === DisclosureStates.Open;\n  }(); // Unlink on \"unmount\" myself\n\n\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: ActionTypes.UnlinkPanel\n      });\n    };\n  }, [dispatch]); // Unlink on \"unmount\" children\n\n  useEffect(function () {\n    var _props$unmount;\n\n    if (state.disclosureState === DisclosureStates.Closed && ((_props$unmount = props.unmount) != null ? _props$unmount : true)) {\n      dispatch({\n        type: ActionTypes.UnlinkPanel\n      });\n    }\n  }, [state.disclosureState, props.unmount, dispatch]);\n  var slot = useMemo(function () {\n    return {\n      open: state.disclosureState === DisclosureStates.Open,\n      close: close\n    };\n  }, [state, close]);\n  var propsWeControl = {\n    ref: panelRef,\n    id: state.panelId\n  };\n  var passthroughProps = props;\n  return React.createElement(DisclosurePanelContext.Provider, {\n    value: state.panelId\n  }, render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_PANEL_TAG,\n    features: PanelRenderFeatures,\n    visible: visible,\n    name: 'Disclosure.Panel'\n  }));\n}); // ---\n\nDisclosure.Button = Button;\nDisclosure.Panel = Panel;\n\nexport { Disclosure };\n"]},"metadata":{},"sourceType":"module"}