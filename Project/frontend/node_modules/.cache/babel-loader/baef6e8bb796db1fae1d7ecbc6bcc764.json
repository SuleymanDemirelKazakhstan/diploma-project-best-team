{"ast":null,"code":"import { useState } from 'react';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\n\nfunction resolveType(props) {\n  var _props$as;\n\n  if (props.type) return props.type;\n  var tag = (_props$as = props.as) != null ? _props$as : 'button';\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button';\n  return undefined;\n}\n\nfunction useResolveButtonType(props, ref) {\n  var _useState = useState(function () {\n    return resolveType(props);\n  }),\n      type = _useState[0],\n      setType = _useState[1];\n\n  useIsoMorphicEffect(function () {\n    setType(resolveType(props));\n  }, [props.type, props.as]);\n  useIsoMorphicEffect(function () {\n    if (type) return;\n    if (!ref.current) return;\n\n    if (ref.current instanceof HTMLButtonElement && !ref.current.hasAttribute('type')) {\n      setType('button');\n    }\n  }, [type, ref]);\n  return type;\n}\n\nexport { useResolveButtonType };","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,QAAoC,iCAApC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,SAAJ;;AAEA,MAAID,KAAK,CAACE,IAAV,EAAgB,OAAOF,KAAK,CAACE,IAAb;AAChB,MAAIC,GAAG,GAAG,CAACF,SAAS,GAAGD,KAAK,CAACI,EAAnB,KAA0B,IAA1B,GAAiCH,SAAjC,GAA6C,QAAvD;AACA,MAAI,OAAOE,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACE,WAAJ,OAAsB,QAArD,EAA+D,OAAO,QAAP;AAC/D,SAAOC,SAAP;AACD;;AAED,SAASC,oBAAT,CAA8BP,KAA9B,EAAqCQ,GAArC,EAA0C;AACxC,MAAIC,SAAS,GAAGZ,QAAQ,CAAC,YAAY;AACnC,WAAOE,WAAW,CAACC,KAAD,CAAlB;AACD,GAFuB,CAAxB;AAAA,MAGIE,IAAI,GAAGO,SAAS,CAAC,CAAD,CAHpB;AAAA,MAIIC,OAAO,GAAGD,SAAS,CAAC,CAAD,CAJvB;;AAMAX,qBAAmB,CAAC,YAAY;AAC9BY,WAAO,CAACX,WAAW,CAACC,KAAD,CAAZ,CAAP;AACD,GAFkB,EAEhB,CAACA,KAAK,CAACE,IAAP,EAAaF,KAAK,CAACI,EAAnB,CAFgB,CAAnB;AAGAN,qBAAmB,CAAC,YAAY;AAC9B,QAAII,IAAJ,EAAU;AACV,QAAI,CAACM,GAAG,CAACG,OAAT,EAAkB;;AAElB,QAAIH,GAAG,CAACG,OAAJ,YAAuBC,iBAAvB,IAA4C,CAACJ,GAAG,CAACG,OAAJ,CAAYE,YAAZ,CAAyB,MAAzB,CAAjD,EAAmF;AACjFH,aAAO,CAAC,QAAD,CAAP;AACD;AACF,GAPkB,EAOhB,CAACR,IAAD,EAAOM,GAAP,CAPgB,CAAnB;AAQA,SAAON,IAAP;AACD;;AAED,SAASK,oBAAT","names":["useState","useIsoMorphicEffect","resolveType","props","_props$as","type","tag","as","toLowerCase","undefined","useResolveButtonType","ref","_useState","setType","current","HTMLButtonElement","hasAttribute"],"sources":["C:/Users/Joka24/Desktop/diplom/node_modules/@headlessui/react/dist/hooks/use-resolve-button-type.esm.js"],"sourcesContent":["import { useState } from 'react';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\n\nfunction resolveType(props) {\n  var _props$as;\n\n  if (props.type) return props.type;\n  var tag = (_props$as = props.as) != null ? _props$as : 'button';\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button';\n  return undefined;\n}\n\nfunction useResolveButtonType(props, ref) {\n  var _useState = useState(function () {\n    return resolveType(props);\n  }),\n      type = _useState[0],\n      setType = _useState[1];\n\n  useIsoMorphicEffect(function () {\n    setType(resolveType(props));\n  }, [props.type, props.as]);\n  useIsoMorphicEffect(function () {\n    if (type) return;\n    if (!ref.current) return;\n\n    if (ref.current instanceof HTMLButtonElement && !ref.current.hasAttribute('type')) {\n      setType('button');\n    }\n  }, [type, ref]);\n  return type;\n}\n\nexport { useResolveButtonType };\n"]},"metadata":{},"sourceType":"module"}