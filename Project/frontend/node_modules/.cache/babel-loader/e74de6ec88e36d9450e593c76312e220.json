{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends, createForOfIteratorHelperLoose as _createForOfIteratorHelperLoose } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useState, useMemo, useEffect, Fragment, useContext, createContext, useRef, useCallback } from 'react';\nimport { match } from '../../utils/match.esm.js';\nimport { render, RenderStrategy, Features } from '../../utils/render.esm.js';\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect.esm.js';\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nimport { useIsMounted } from '../../hooks/use-is-mounted.esm.js';\nimport { useOpenClosed, State, OpenClosedProvider } from '../../internal/open-closed.esm.js';\nimport { useIsInitialRender } from '../../hooks/use-is-initial-render.esm.js';\nimport { transition, Reason } from './utils/transition.esm.js';\n\nfunction useSplitClasses(classes) {\n  if (classes === void 0) {\n    classes = '';\n  }\n\n  return useMemo(function () {\n    return classes.split(' ').filter(function (className) {\n      return className.trim().length > 1;\n    });\n  }, [classes]);\n}\n\nvar TransitionContext = /*#__PURE__*/createContext(null);\nTransitionContext.displayName = 'TransitionContext';\nvar TreeStates;\n\n(function (TreeStates) {\n  TreeStates[\"Visible\"] = \"visible\";\n  TreeStates[\"Hidden\"] = \"hidden\";\n})(TreeStates || (TreeStates = {}));\n\nfunction useTransitionContext() {\n  var context = useContext(TransitionContext);\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.');\n  }\n\n  return context;\n}\n\nfunction useParentNesting() {\n  var context = useContext(NestingContext);\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.');\n  }\n\n  return context;\n}\n\nvar NestingContext = /*#__PURE__*/createContext(null);\nNestingContext.displayName = 'NestingContext';\n\nfunction hasChildren(bag) {\n  if ('children' in bag) return hasChildren(bag.children);\n  return bag.current.filter(function (_ref) {\n    var state = _ref.state;\n    return state === TreeStates.Visible;\n  }).length > 0;\n}\n\nfunction useNesting(done) {\n  var doneRef = useRef(done);\n  var transitionableChildren = useRef([]);\n  var mounted = useIsMounted();\n  useEffect(function () {\n    doneRef.current = done;\n  }, [done]);\n  var unregister = useCallback(function (childId, strategy) {\n    var _match;\n\n    if (strategy === void 0) {\n      strategy = RenderStrategy.Hidden;\n    }\n\n    var idx = transitionableChildren.current.findIndex(function (_ref2) {\n      var id = _ref2.id;\n      return id === childId;\n    });\n    if (idx === -1) return;\n    match(strategy, (_match = {}, _match[RenderStrategy.Unmount] = function () {\n      transitionableChildren.current.splice(idx, 1);\n    }, _match[RenderStrategy.Hidden] = function () {\n      transitionableChildren.current[idx].state = TreeStates.Hidden;\n    }, _match));\n\n    if (!hasChildren(transitionableChildren) && mounted.current) {\n      doneRef.current == null ? void 0 : doneRef.current();\n    }\n  }, [doneRef, mounted, transitionableChildren]);\n  var register = useCallback(function (childId) {\n    var child = transitionableChildren.current.find(function (_ref3) {\n      var id = _ref3.id;\n      return id === childId;\n    });\n\n    if (!child) {\n      transitionableChildren.current.push({\n        id: childId,\n        state: TreeStates.Visible\n      });\n    } else if (child.state !== TreeStates.Visible) {\n      child.state = TreeStates.Visible;\n    }\n\n    return function () {\n      return unregister(childId, RenderStrategy.Unmount);\n    };\n  }, [transitionableChildren, unregister]);\n  return useMemo(function () {\n    return {\n      children: transitionableChildren,\n      register: register,\n      unregister: unregister\n    };\n  }, [register, unregister, transitionableChildren]);\n}\n\nfunction noop() {}\n\nvar eventNames = ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'];\n\nfunction ensureEventHooksExist(events) {\n  var result = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose(eventNames), _step; !(_step = _iterator()).done;) {\n    var _events$name;\n\n    var name = _step.value;\n    result[name] = (_events$name = events[name]) != null ? _events$name : noop;\n  }\n\n  return result;\n}\n\nfunction useEvents(events) {\n  var eventsRef = useRef(ensureEventHooksExist(events));\n  useEffect(function () {\n    eventsRef.current = ensureEventHooksExist(events);\n  }, [events]);\n  return eventsRef;\n} // ---\n\n\nvar DEFAULT_TRANSITION_CHILD_TAG = 'div';\nvar TransitionChildRenderFeatures = Features.RenderStrategy;\n\nfunction TransitionChild(props) {\n  var _match3;\n\n  var beforeEnter = props.beforeEnter,\n      afterEnter = props.afterEnter,\n      beforeLeave = props.beforeLeave,\n      afterLeave = props.afterLeave,\n      enter = props.enter,\n      enterFrom = props.enterFrom,\n      enterTo = props.enterTo,\n      entered = props.entered,\n      leave = props.leave,\n      leaveFrom = props.leaveFrom,\n      leaveTo = props.leaveTo,\n      rest = _objectWithoutPropertiesLoose(props, [\"beforeEnter\", \"afterEnter\", \"beforeLeave\", \"afterLeave\", \"enter\", \"enterFrom\", \"enterTo\", \"entered\", \"leave\", \"leaveFrom\", \"leaveTo\"]);\n\n  var container = useRef(null);\n\n  var _useState = useState(TreeStates.Visible),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var strategy = rest.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden;\n\n  var _useTransitionContext = useTransitionContext(),\n      show = _useTransitionContext.show,\n      appear = _useTransitionContext.appear,\n      initial = _useTransitionContext.initial;\n\n  var _useParentNesting = useParentNesting(),\n      register = _useParentNesting.register,\n      unregister = _useParentNesting.unregister;\n\n  var id = useId();\n  var isTransitioning = useRef(false);\n  var nesting = useNesting(function () {\n    // When all children have been unmounted we can only hide ourselves if and only if we are not\n    // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n    if (!isTransitioning.current) {\n      setState(TreeStates.Hidden);\n      unregister(id);\n      events.current.afterLeave();\n    }\n  });\n  useIsoMorphicEffect(function () {\n    if (!id) return;\n    return register(id);\n  }, [register, id]);\n  useIsoMorphicEffect(function () {\n    var _match2; // If we are in another mode than the Hidden mode then ignore\n\n\n    if (strategy !== RenderStrategy.Hidden) return;\n    if (!id) return; // Make sure that we are visible\n\n    if (show && state !== TreeStates.Visible) {\n      setState(TreeStates.Visible);\n      return;\n    }\n\n    match(state, (_match2 = {}, _match2[TreeStates.Hidden] = function () {\n      return unregister(id);\n    }, _match2[TreeStates.Visible] = function () {\n      return register(id);\n    }, _match2));\n  }, [state, id, register, unregister, show, strategy]);\n  var enterClasses = useSplitClasses(enter);\n  var enterFromClasses = useSplitClasses(enterFrom);\n  var enterToClasses = useSplitClasses(enterTo);\n  var enteredClasses = useSplitClasses(entered);\n  var leaveClasses = useSplitClasses(leave);\n  var leaveFromClasses = useSplitClasses(leaveFrom);\n  var leaveToClasses = useSplitClasses(leaveTo);\n  var events = useEvents({\n    beforeEnter: beforeEnter,\n    afterEnter: afterEnter,\n    beforeLeave: beforeLeave,\n    afterLeave: afterLeave\n  });\n  var ready = useServerHandoffComplete();\n  useEffect(function () {\n    if (ready && state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?');\n    }\n  }, [container, state, ready]); // Skipping initial transition\n\n  var skip = initial && !appear;\n  useIsoMorphicEffect(function () {\n    var node = container.current;\n    if (!node) return;\n    if (skip) return;\n    isTransitioning.current = true;\n    if (show) events.current.beforeEnter();\n    if (!show) events.current.beforeLeave();\n    return show ? transition(node, enterClasses, enterFromClasses, enterToClasses, enteredClasses, function (reason) {\n      isTransitioning.current = false;\n      if (reason === Reason.Finished) events.current.afterEnter();\n    }) : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, enteredClasses, function (reason) {\n      isTransitioning.current = false;\n      if (reason !== Reason.Finished) return; // When we don't have children anymore we can safely unregister from the parent and hide\n      // ourselves.\n\n      if (!hasChildren(nesting)) {\n        setState(TreeStates.Hidden);\n        unregister(id);\n        events.current.afterLeave();\n      }\n    });\n  }, [events, id, isTransitioning, unregister, nesting, container, skip, show, enterClasses, enterFromClasses, enterToClasses, leaveClasses, leaveFromClasses, leaveToClasses]);\n  var propsWeControl = {\n    ref: container\n  };\n  var passthroughProps = rest;\n  return React.createElement(NestingContext.Provider, {\n    value: nesting\n  }, React.createElement(OpenClosedProvider, {\n    value: match(state, (_match3 = {}, _match3[TreeStates.Visible] = State.Open, _match3[TreeStates.Hidden] = State.Closed, _match3))\n  }, render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    defaultTag: DEFAULT_TRANSITION_CHILD_TAG,\n    features: TransitionChildRenderFeatures,\n    visible: state === TreeStates.Visible,\n    name: 'Transition.Child'\n  })));\n}\n\nfunction Transition(props) {\n  // @ts-expect-error\n  var show = props.show,\n      _props$appear = props.appear,\n      appear = _props$appear === void 0 ? false : _props$appear,\n      unmount = props.unmount,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"show\", \"appear\", \"unmount\"]);\n\n  var usesOpenClosedState = useOpenClosed();\n\n  if (show === undefined && usesOpenClosedState !== null) {\n    var _match4;\n\n    show = match(usesOpenClosedState, (_match4 = {}, _match4[State.Open] = true, _match4[State.Closed] = false, _match4));\n  }\n\n  if (![true, false].includes(show)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.');\n  }\n\n  var _useState2 = useState(show ? TreeStates.Visible : TreeStates.Hidden),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var nestingBag = useNesting(function () {\n    setState(TreeStates.Hidden);\n  });\n  var initial = useIsInitialRender();\n  var transitionBag = useMemo(function () {\n    return {\n      show: show,\n      appear: appear || !initial,\n      initial: initial\n    };\n  }, [show, appear, initial]);\n  useEffect(function () {\n    if (show) {\n      setState(TreeStates.Visible);\n    } else if (!hasChildren(nestingBag)) {\n      setState(TreeStates.Hidden);\n    }\n  }, [show, nestingBag]);\n  var sharedProps = {\n    unmount: unmount\n  };\n  return React.createElement(NestingContext.Provider, {\n    value: nestingBag\n  }, React.createElement(TransitionContext.Provider, {\n    value: transitionBag\n  }, render({\n    props: _extends({}, sharedProps, {\n      as: Fragment,\n      children: React.createElement(TransitionChild, Object.assign({}, sharedProps, passthroughProps))\n    }),\n    defaultTag: Fragment,\n    features: TransitionChildRenderFeatures,\n    visible: state === TreeStates.Visible,\n    name: 'Transition'\n  })));\n}\n\nTransition.Child = function Child(props) {\n  var hasTransitionContext = useContext(TransitionContext) !== null;\n  var hasOpenClosedContext = useOpenClosed() !== null;\n  return !hasTransitionContext && hasOpenClosedContext ? React.createElement(Transition, Object.assign({}, props)) : React.createElement(TransitionChild, Object.assign({}, props));\n};\n\nTransition.Root = Transition;\nexport { Transition };","map":{"version":3,"mappings":"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","names":["objectWithoutPropertiesLoose","_objectWithoutPropertiesLoose","extends","_extends","createForOfIteratorHelperLoose","_createForOfIteratorHelperLoose","React","useState","useMemo","useEffect","Fragment","useContext","createContext","useRef","useCallback","match","render","RenderStrategy","Features","useIsoMorphicEffect","useServerHandoffComplete","useId","useIsMounted","useOpenClosed","State","OpenClosedProvider","useIsInitialRender","transition","Reason","useSplitClasses","classes","split","filter","className","trim","length","TransitionContext","displayName","TreeStates","useTransitionContext","context","Error","useParentNesting","NestingContext","hasChildren","bag","children","current","_ref","state","Visible","useNesting","done","doneRef","transitionableChildren","mounted","unregister","childId","strategy","_match","Hidden","idx","findIndex","_ref2","id","Unmount","splice","register","child","find","_ref3","push","noop","eventNames","ensureEventHooksExist","events","result","_iterator","_step","_events$name","name","value","useEvents","eventsRef","DEFAULT_TRANSITION_CHILD_TAG","TransitionChildRenderFeatures","TransitionChild","props","_match3","beforeEnter","afterEnter","beforeLeave","afterLeave","enter","enterFrom","enterTo","entered","leave","leaveFrom","leaveTo","rest","container","_useState","setState","unmount","_useTransitionContext","show","appear","initial","_useParentNesting","isTransitioning","nesting","_match2","enterClasses","enterFromClasses","enterToClasses","enteredClasses","leaveClasses","leaveFromClasses","leaveToClasses","ready","skip","node","reason","Finished","propsWeControl","ref","passthroughProps","createElement","Provider","Open","Closed","defaultTag","features","visible","Transition","_props$appear","usesOpenClosedState","undefined","_match4","includes","_useState2","nestingBag","transitionBag","sharedProps","as","Object","assign","Child","hasTransitionContext","hasOpenClosedContext","Root"],"sources":["C:/Users/Joka24/Desktop/diplom/node_modules/@headlessui/react/dist/components/transitions/transition.esm.js"],"sourcesContent":["import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends, createForOfIteratorHelperLoose as _createForOfIteratorHelperLoose } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useState, useMemo, useEffect, Fragment, useContext, createContext, useRef, useCallback } from 'react';\nimport { match } from '../../utils/match.esm.js';\nimport { render, RenderStrategy, Features } from '../../utils/render.esm.js';\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect.esm.js';\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nimport { useIsMounted } from '../../hooks/use-is-mounted.esm.js';\nimport { useOpenClosed, State, OpenClosedProvider } from '../../internal/open-closed.esm.js';\nimport { useIsInitialRender } from '../../hooks/use-is-initial-render.esm.js';\nimport { transition, Reason } from './utils/transition.esm.js';\n\nfunction useSplitClasses(classes) {\n  if (classes === void 0) {\n    classes = '';\n  }\n\n  return useMemo(function () {\n    return classes.split(' ').filter(function (className) {\n      return className.trim().length > 1;\n    });\n  }, [classes]);\n}\n\nvar TransitionContext = /*#__PURE__*/createContext(null);\nTransitionContext.displayName = 'TransitionContext';\nvar TreeStates;\n\n(function (TreeStates) {\n  TreeStates[\"Visible\"] = \"visible\";\n  TreeStates[\"Hidden\"] = \"hidden\";\n})(TreeStates || (TreeStates = {}));\n\nfunction useTransitionContext() {\n  var context = useContext(TransitionContext);\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.');\n  }\n\n  return context;\n}\n\nfunction useParentNesting() {\n  var context = useContext(NestingContext);\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.');\n  }\n\n  return context;\n}\n\nvar NestingContext = /*#__PURE__*/createContext(null);\nNestingContext.displayName = 'NestingContext';\n\nfunction hasChildren(bag) {\n  if ('children' in bag) return hasChildren(bag.children);\n  return bag.current.filter(function (_ref) {\n    var state = _ref.state;\n    return state === TreeStates.Visible;\n  }).length > 0;\n}\n\nfunction useNesting(done) {\n  var doneRef = useRef(done);\n  var transitionableChildren = useRef([]);\n  var mounted = useIsMounted();\n  useEffect(function () {\n    doneRef.current = done;\n  }, [done]);\n  var unregister = useCallback(function (childId, strategy) {\n    var _match;\n\n    if (strategy === void 0) {\n      strategy = RenderStrategy.Hidden;\n    }\n\n    var idx = transitionableChildren.current.findIndex(function (_ref2) {\n      var id = _ref2.id;\n      return id === childId;\n    });\n    if (idx === -1) return;\n    match(strategy, (_match = {}, _match[RenderStrategy.Unmount] = function () {\n      transitionableChildren.current.splice(idx, 1);\n    }, _match[RenderStrategy.Hidden] = function () {\n      transitionableChildren.current[idx].state = TreeStates.Hidden;\n    }, _match));\n\n    if (!hasChildren(transitionableChildren) && mounted.current) {\n      doneRef.current == null ? void 0 : doneRef.current();\n    }\n  }, [doneRef, mounted, transitionableChildren]);\n  var register = useCallback(function (childId) {\n    var child = transitionableChildren.current.find(function (_ref3) {\n      var id = _ref3.id;\n      return id === childId;\n    });\n\n    if (!child) {\n      transitionableChildren.current.push({\n        id: childId,\n        state: TreeStates.Visible\n      });\n    } else if (child.state !== TreeStates.Visible) {\n      child.state = TreeStates.Visible;\n    }\n\n    return function () {\n      return unregister(childId, RenderStrategy.Unmount);\n    };\n  }, [transitionableChildren, unregister]);\n  return useMemo(function () {\n    return {\n      children: transitionableChildren,\n      register: register,\n      unregister: unregister\n    };\n  }, [register, unregister, transitionableChildren]);\n}\n\nfunction noop() {}\n\nvar eventNames = ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'];\n\nfunction ensureEventHooksExist(events) {\n  var result = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose(eventNames), _step; !(_step = _iterator()).done;) {\n    var _events$name;\n\n    var name = _step.value;\n    result[name] = (_events$name = events[name]) != null ? _events$name : noop;\n  }\n\n  return result;\n}\n\nfunction useEvents(events) {\n  var eventsRef = useRef(ensureEventHooksExist(events));\n  useEffect(function () {\n    eventsRef.current = ensureEventHooksExist(events);\n  }, [events]);\n  return eventsRef;\n} // ---\n\n\nvar DEFAULT_TRANSITION_CHILD_TAG = 'div';\nvar TransitionChildRenderFeatures = Features.RenderStrategy;\n\nfunction TransitionChild(props) {\n  var _match3;\n\n  var beforeEnter = props.beforeEnter,\n      afterEnter = props.afterEnter,\n      beforeLeave = props.beforeLeave,\n      afterLeave = props.afterLeave,\n      enter = props.enter,\n      enterFrom = props.enterFrom,\n      enterTo = props.enterTo,\n      entered = props.entered,\n      leave = props.leave,\n      leaveFrom = props.leaveFrom,\n      leaveTo = props.leaveTo,\n      rest = _objectWithoutPropertiesLoose(props, [\"beforeEnter\", \"afterEnter\", \"beforeLeave\", \"afterLeave\", \"enter\", \"enterFrom\", \"enterTo\", \"entered\", \"leave\", \"leaveFrom\", \"leaveTo\"]);\n\n  var container = useRef(null);\n\n  var _useState = useState(TreeStates.Visible),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var strategy = rest.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden;\n\n  var _useTransitionContext = useTransitionContext(),\n      show = _useTransitionContext.show,\n      appear = _useTransitionContext.appear,\n      initial = _useTransitionContext.initial;\n\n  var _useParentNesting = useParentNesting(),\n      register = _useParentNesting.register,\n      unregister = _useParentNesting.unregister;\n\n  var id = useId();\n  var isTransitioning = useRef(false);\n  var nesting = useNesting(function () {\n    // When all children have been unmounted we can only hide ourselves if and only if we are not\n    // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n    if (!isTransitioning.current) {\n      setState(TreeStates.Hidden);\n      unregister(id);\n      events.current.afterLeave();\n    }\n  });\n  useIsoMorphicEffect(function () {\n    if (!id) return;\n    return register(id);\n  }, [register, id]);\n  useIsoMorphicEffect(function () {\n    var _match2;\n\n    // If we are in another mode than the Hidden mode then ignore\n    if (strategy !== RenderStrategy.Hidden) return;\n    if (!id) return; // Make sure that we are visible\n\n    if (show && state !== TreeStates.Visible) {\n      setState(TreeStates.Visible);\n      return;\n    }\n\n    match(state, (_match2 = {}, _match2[TreeStates.Hidden] = function () {\n      return unregister(id);\n    }, _match2[TreeStates.Visible] = function () {\n      return register(id);\n    }, _match2));\n  }, [state, id, register, unregister, show, strategy]);\n  var enterClasses = useSplitClasses(enter);\n  var enterFromClasses = useSplitClasses(enterFrom);\n  var enterToClasses = useSplitClasses(enterTo);\n  var enteredClasses = useSplitClasses(entered);\n  var leaveClasses = useSplitClasses(leave);\n  var leaveFromClasses = useSplitClasses(leaveFrom);\n  var leaveToClasses = useSplitClasses(leaveTo);\n  var events = useEvents({\n    beforeEnter: beforeEnter,\n    afterEnter: afterEnter,\n    beforeLeave: beforeLeave,\n    afterLeave: afterLeave\n  });\n  var ready = useServerHandoffComplete();\n  useEffect(function () {\n    if (ready && state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?');\n    }\n  }, [container, state, ready]); // Skipping initial transition\n\n  var skip = initial && !appear;\n  useIsoMorphicEffect(function () {\n    var node = container.current;\n    if (!node) return;\n    if (skip) return;\n    isTransitioning.current = true;\n    if (show) events.current.beforeEnter();\n    if (!show) events.current.beforeLeave();\n    return show ? transition(node, enterClasses, enterFromClasses, enterToClasses, enteredClasses, function (reason) {\n      isTransitioning.current = false;\n      if (reason === Reason.Finished) events.current.afterEnter();\n    }) : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, enteredClasses, function (reason) {\n      isTransitioning.current = false;\n      if (reason !== Reason.Finished) return; // When we don't have children anymore we can safely unregister from the parent and hide\n      // ourselves.\n\n      if (!hasChildren(nesting)) {\n        setState(TreeStates.Hidden);\n        unregister(id);\n        events.current.afterLeave();\n      }\n    });\n  }, [events, id, isTransitioning, unregister, nesting, container, skip, show, enterClasses, enterFromClasses, enterToClasses, leaveClasses, leaveFromClasses, leaveToClasses]);\n  var propsWeControl = {\n    ref: container\n  };\n  var passthroughProps = rest;\n  return React.createElement(NestingContext.Provider, {\n    value: nesting\n  }, React.createElement(OpenClosedProvider, {\n    value: match(state, (_match3 = {}, _match3[TreeStates.Visible] = State.Open, _match3[TreeStates.Hidden] = State.Closed, _match3))\n  }, render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    defaultTag: DEFAULT_TRANSITION_CHILD_TAG,\n    features: TransitionChildRenderFeatures,\n    visible: state === TreeStates.Visible,\n    name: 'Transition.Child'\n  })));\n}\n\nfunction Transition(props) {\n  // @ts-expect-error\n  var show = props.show,\n      _props$appear = props.appear,\n      appear = _props$appear === void 0 ? false : _props$appear,\n      unmount = props.unmount,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"show\", \"appear\", \"unmount\"]);\n\n  var usesOpenClosedState = useOpenClosed();\n\n  if (show === undefined && usesOpenClosedState !== null) {\n    var _match4;\n\n    show = match(usesOpenClosedState, (_match4 = {}, _match4[State.Open] = true, _match4[State.Closed] = false, _match4));\n  }\n\n  if (![true, false].includes(show)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.');\n  }\n\n  var _useState2 = useState(show ? TreeStates.Visible : TreeStates.Hidden),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var nestingBag = useNesting(function () {\n    setState(TreeStates.Hidden);\n  });\n  var initial = useIsInitialRender();\n  var transitionBag = useMemo(function () {\n    return {\n      show: show,\n      appear: appear || !initial,\n      initial: initial\n    };\n  }, [show, appear, initial]);\n  useEffect(function () {\n    if (show) {\n      setState(TreeStates.Visible);\n    } else if (!hasChildren(nestingBag)) {\n      setState(TreeStates.Hidden);\n    }\n  }, [show, nestingBag]);\n  var sharedProps = {\n    unmount: unmount\n  };\n  return React.createElement(NestingContext.Provider, {\n    value: nestingBag\n  }, React.createElement(TransitionContext.Provider, {\n    value: transitionBag\n  }, render({\n    props: _extends({}, sharedProps, {\n      as: Fragment,\n      children: React.createElement(TransitionChild, Object.assign({}, sharedProps, passthroughProps))\n    }),\n    defaultTag: Fragment,\n    features: TransitionChildRenderFeatures,\n    visible: state === TreeStates.Visible,\n    name: 'Transition'\n  })));\n}\n\nTransition.Child = function Child(props) {\n  var hasTransitionContext = useContext(TransitionContext) !== null;\n  var hasOpenClosedContext = useOpenClosed() !== null;\n  return !hasTransitionContext && hasOpenClosedContext ? React.createElement(Transition, Object.assign({}, props)) : React.createElement(TransitionChild, Object.assign({}, props));\n};\n\nTransition.Root = Transition;\n\nexport { Transition };\n"]},"metadata":{},"sourceType":"module"}