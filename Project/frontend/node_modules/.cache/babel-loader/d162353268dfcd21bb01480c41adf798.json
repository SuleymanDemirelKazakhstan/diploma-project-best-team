{"ast":null,"code":"import { createForOfIteratorHelperLoose as _createForOfIteratorHelperLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\nvar interactables = /*#__PURE__*/new Set();\nvar originals = /*#__PURE__*/new Map();\n\nfunction inert(element) {\n  element.setAttribute('aria-hidden', 'true'); // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n\n  element.inert = true;\n}\n\nfunction restore(element) {\n  var original = originals.get(element);\n  if (!original) return;\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden');else element.setAttribute('aria-hidden', original['aria-hidden']); // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n\n  element.inert = original.inert;\n}\n\nfunction useInertOthers(container, enabled) {\n  if (enabled === void 0) {\n    enabled = true;\n  }\n\n  useIsoMorphicEffect(function () {\n    if (!enabled) return;\n    if (!container.current) return;\n    var element = container.current; // Mark myself as an interactable element\n\n    interactables.add(element); // Restore elements that now contain an interactable child\n\n    for (var _iterator = _createForOfIteratorHelperLoose(originals.keys()), _step; !(_step = _iterator()).done;) {\n      var original = _step.value;\n\n      if (original.contains(element)) {\n        restore(original);\n        originals[\"delete\"](original);\n      }\n    } // Collect direct children of the body\n\n\n    document.querySelectorAll('body > *').forEach(function (child) {\n      if (!(child instanceof HTMLElement)) return; // Skip non-HTMLElements\n      // Skip the interactables, and the parents of the interactables\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(interactables), _step2; !(_step2 = _iterator2()).done;) {\n        var interactable = _step2.value;\n        if (child.contains(interactable)) return;\n      } // Keep track of the elements\n\n\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert\n        }); // Mutate the element\n\n        inert(child);\n      }\n    });\n    return function () {\n      // Inert is disabled on the current element\n      interactables[\"delete\"](element); // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll('body > *').forEach(function (child) {\n          if (!(child instanceof HTMLElement)) return; // Skip non-HTMLElements\n          // Skip already inert parents\n\n          if (originals.has(child)) return; // Skip the interactables, and the parents of the interactables\n\n          for (var _iterator3 = _createForOfIteratorHelperLoose(interactables), _step3; !(_step3 = _iterator3()).done;) {\n            var interactable = _step3.value;\n            if (child.contains(interactable)) return;\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert\n          }); // Mutate the element\n\n          inert(child);\n        });\n      } else {\n        for (var _iterator4 = _createForOfIteratorHelperLoose(originals.keys()), _step4; !(_step4 = _iterator4()).done;) {\n          var _element = _step4.value; // Restore\n\n          restore(_element); // Cleanup\n\n          originals[\"delete\"](_element);\n        }\n      }\n    };\n  }, [enabled]);\n}\n\nexport { useInertOthers };","map":{"version":3,"mappings":"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","names":["createForOfIteratorHelperLoose","_createForOfIteratorHelperLoose","useIsoMorphicEffect","interactables","Set","originals","Map","inert","element","setAttribute","restore","original","get","removeAttribute","useInertOthers","container","enabled","current","add","_iterator","keys","_step","done","value","contains","document","querySelectorAll","forEach","child","HTMLElement","_iterator2","_step2","interactable","size","set","getAttribute","has","_iterator3","_step3","_iterator4","_step4","_element"],"sources":["C:/Users/Joka24/Desktop/diplom/node_modules/@headlessui/react/dist/hooks/use-inert-others.esm.js"],"sourcesContent":["import { createForOfIteratorHelperLoose as _createForOfIteratorHelperLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\n\nvar interactables = /*#__PURE__*/new Set();\nvar originals = /*#__PURE__*/new Map();\n\nfunction inert(element) {\n  element.setAttribute('aria-hidden', 'true'); // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n\n  element.inert = true;\n}\n\nfunction restore(element) {\n  var original = originals.get(element);\n  if (!original) return;\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden');else element.setAttribute('aria-hidden', original['aria-hidden']); // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n\n  element.inert = original.inert;\n}\n\nfunction useInertOthers(container, enabled) {\n  if (enabled === void 0) {\n    enabled = true;\n  }\n\n  useIsoMorphicEffect(function () {\n    if (!enabled) return;\n    if (!container.current) return;\n    var element = container.current; // Mark myself as an interactable element\n\n    interactables.add(element); // Restore elements that now contain an interactable child\n\n    for (var _iterator = _createForOfIteratorHelperLoose(originals.keys()), _step; !(_step = _iterator()).done;) {\n      var original = _step.value;\n\n      if (original.contains(element)) {\n        restore(original);\n        originals[\"delete\"](original);\n      }\n    } // Collect direct children of the body\n\n\n    document.querySelectorAll('body > *').forEach(function (child) {\n      if (!(child instanceof HTMLElement)) return; // Skip non-HTMLElements\n      // Skip the interactables, and the parents of the interactables\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(interactables), _step2; !(_step2 = _iterator2()).done;) {\n        var interactable = _step2.value;\n        if (child.contains(interactable)) return;\n      } // Keep track of the elements\n\n\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert\n        }); // Mutate the element\n\n        inert(child);\n      }\n    });\n    return function () {\n      // Inert is disabled on the current element\n      interactables[\"delete\"](element); // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll('body > *').forEach(function (child) {\n          if (!(child instanceof HTMLElement)) return; // Skip non-HTMLElements\n          // Skip already inert parents\n\n          if (originals.has(child)) return; // Skip the interactables, and the parents of the interactables\n\n          for (var _iterator3 = _createForOfIteratorHelperLoose(interactables), _step3; !(_step3 = _iterator3()).done;) {\n            var interactable = _step3.value;\n            if (child.contains(interactable)) return;\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert\n          }); // Mutate the element\n\n          inert(child);\n        });\n      } else {\n        for (var _iterator4 = _createForOfIteratorHelperLoose(originals.keys()), _step4; !(_step4 = _iterator4()).done;) {\n          var _element = _step4.value;\n          // Restore\n          restore(_element); // Cleanup\n\n          originals[\"delete\"](_element);\n        }\n      }\n    };\n  }, [enabled]);\n}\n\nexport { useInertOthers };\n"]},"metadata":{},"sourceType":"module"}